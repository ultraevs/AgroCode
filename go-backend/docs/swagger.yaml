definitions:
  model.CodeResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.UserResponse:
    properties:
      animals:
        items:
          type: string
        type: array
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      photo:
        type: string
      rating:
        type: number
      reviews:
        items:
          type: string
        type: array
      reviews_count:
        type: integer
      stats_matches:
        type: integer
      stats_views:
        type: integer
    type: object
info:
  contact: {}
  description: cows.shmyaks.ru API
  title: AgroCode Service API
  version: "1.0"
paths:
  /v1/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя с предоставленным email и паролем.
      parameters:
      - description: Запрос на авторизацию пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь авторизован
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось авторизовать пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Логин
      tags:
      - Auth
  /v1/user/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает все данные о пользователе по идентификатору или email
        из cookie.
      parameters:
      - description: ID пользователя, если доступ по ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя успешно получены
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Ошибка при получении данных пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить данные пользователя
      tags:
      - User
  /v1/user/me:
    get:
      consumes:
      - application/json
      description: Возвращает все данные о пользователе по идентификатору или email
        из cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя успешно получены
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Ошибка при получении данных пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить данные пользователя
      tags:
      - User
  /v1/user_create:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с предоставленным email, паролем и
        именем.
      parameters:
      - description: Запрос на создание пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно создан
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось создать пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создать нового пользователя
      tags:
      - Auth
securityDefinitions:
  CookieAuth:
    in: cookie
    name: Authtoken
    type: apiKey
swagger: "2.0"
